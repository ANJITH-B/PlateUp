/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Raakesh.Madan (https://sketchfab.com/Raakesh.Madan)
Source: https://sketchfab.com/3d-models/iphone-14-pro-max-gold-704dff49176e482cb3c243b3e754b753
Title: iPhone 14 Pro Max (Gold)
*/


import React, { useEffect, useMemo, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three';

export function Iphone(props) {
  const { section } = props;
  const { nodes, materials } = useGLTF('/iphone_14_pro_max_gold.glb');
  const groupRef = useRef();


  useEffect(() => {
    if (!props.canvas) return; // Check if canvas exists

    const controls = new OrbitControls(props.camera, groupRef.current); // Create OrbitControls
    controls.enableDamping = true; // Add smoothness to the rotation
    controls.dampingFactor = 5; // Set damping factor

    const handleMouseDown = (event) => {
      event.preventDefault();
      controls.enableRotate = true;
    };

    const handleMouseUp = () => {
      controls.enableRotate = true;
    };

    const handleMouseMove = (event) => {
      if (controls.enableRotate) {
        const deltaX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;
        controls.rotateLeft((2 * Math.PI * deltaX) / (props.canvas.clientWidth || 1)); // Use fallback value if clientWidth is undefined
      }
    };

    document.addEventListener('mousedown', handleMouseDown);
    document.addEventListener('mouseup', handleMouseUp);
    document.addEventListener('mousemove', handleMouseMove);

    return () => {
      document.removeEventListener('mousedown', handleMouseDown);
      document.removeEventListener('mouseup', handleMouseUp);
      document.removeEventListener('mousemove', handleMouseMove);
    };
  }, [props.camera, props.canvas]);


  const videoTexture = useMemo(() => {
    const video = document.createElement('video');
    video.crossOrigin = 'Anonymous';
    video.loop = false;
    video.muted = true;

    const texture = new THREE.VideoTexture(video);
    texture.minFilter = THREE.LinearFilter;
    texture.magFilter = THREE.LinearFilter;
    texture.format = THREE.RGBFormat;

    const playVideo = () => {
      video.play().catch(error => {
        console.error('Error playing video:', error);
      });
    };

    if (section === 1) {
      video.src = 'videos/FP.mp4'; // Change the src of the video
      playVideo();
    } else if (section === 2) {
      video.src = "videos/3.mp4";
      playVideo();
    }
    else if (section === 3) {
      video.src = "videos/3.mp4";
      playVideo();
    } else if (section === 4) {
      video.src = "videos/4.mp4";
      playVideo();
    }
    else {
      video.src = 'videos/2.mp4';
      playVideo();
    }

    return texture;
  }, [section]);


  return (
    <group ref={groupRef}  {...props} dispose={null}>
      <group scale={0.01}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.SSwNHydlPxsUYYx.geometry}
          material={materials.VlnkJNnmZmryUEK}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.GoKkDPUheDuuSeZ.geometry}
          material={materials.FjQZkOEFcAMgVKb}
        />
        <group  >

          <mesh
            castShadow
            receiveShadow
            geometry={nodes.LLCOsMNMwTSiaFM_0.geometry}
            // geometry={new THREE.PlaneGeometry(1, 1)}
            material={new THREE.MeshBasicMaterial({ map: videoTexture })}
          // scale={[videoTexture.image.width, videoTexture.image.height,2]}
          // material={materials.jUggraQHQxDJpnM}
          />
        </group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.mCHktZAFyMAJfef.geometry}
          material={materials.XioMmaZGUXvxXPb}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.dhklRpTwbkGOiTk.geometry}
          material={materials.fexrCBexEqONlzJ}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.ffAKcDPUgFPpzDm.geometry}
          material={materials.VlnkJNnmZmryUEK}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.rhWSVMrzmgmACdq.geometry}
          material={materials.GoEESZWjCZpqeOD}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TpYiAaTOnMgRFmX_0.geometry}
          material={materials.pAavhFVnCAgSnSH}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.kkKyyQuSQljBsvq.geometry}
          material={materials.GCTfChbRIgBmWbe}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.fmPCLkRSemlQWac.geometry}
          material={materials.PLMruZnLcxoCgNt}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.YPoKloEgOhaAHnb.geometry}
          material={materials.loFcbeOTkLALGur}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.ySMlAnxbqcOOfYN_0.geometry}
          material={materials.bliqaGpTvCuZHuk}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.MZgVlnVREwAXmWu_0.geometry}
          material={materials.TrnkWAfGduLgqLM}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.LQmVKBDUfvlduwU.geometry}
          material={materials.qzKHApwituZTUxC}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.jxlpVheMoDZjVdT.geometry}
          material={materials.XioMmaZGUXvxXPb}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.QUgUcmNrbmAQdPa.geometry}
          material={materials.VlnkJNnmZmryUEK}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.DWuaFbuiStCtHXh.geometry}
          material={materials.VlnkJNnmZmryUEK}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.KEoybOafRtqNJNh.geometry}
          material={materials.IfqLTOjymCZMuVu}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.XaStmvbQicYGoTn.geometry}
          material={materials.IfqLTOjymCZMuVu}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.SkYYDNrQKqVDRge.geometry}
          material={materials.GCTfChbRIgBmWbe}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.jllDjFkFZNzYOGW.geometry}
          material={materials.GoEESZWjCZpqeOD}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.nHCDQLdTvgMPJbp.geometry}
          material={materials.pUfGAKnCgtMMbbm}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.ZCtyoMmbuhknTJj.geometry}
          material={materials.erHrUfZxAtkfXqO}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.EYwxmcMJdavFtfW.geometry}
          material={materials.MeiGPKHwBMVqGNQ}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.YriphandxAMCCeO.geometry}
          material={materials.yuFXHUhPQDoVApU}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.ixErOejazQORIfP.geometry}
          material={materials.yuFXHUhPQDoVApU}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.gfCaTdiXaVSAvAF_0.geometry}
          material={materials.ZyKhfPnbNOCYIny}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.NXKAkZjsnbPTLxk_0.geometry}
          material={materials.EcHAJKlkagvhESV}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.QouRlcwrCgGeXyH_0.geometry}
          material={materials.hgmDQvqtKSacBdB}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.CifRJRFlybUhpcD.geometry}
          material={materials.IfqLTOjymCZMuVu}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.WaDbzrqgLcHkRTX.geometry}
          material={materials.EnwhLiFdMDwiUyz}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.MZiAbIpINzxMuaJ_0.geometry}
          material={materials.TrnkWAfGduLgqLM}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.jpYEgDQfzzGREjL.geometry}
          material={materials.VlnkJNnmZmryUEK}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.FCnUJNLAiKvmJAc_0.geometry}
          material={materials.IfqLTOjymCZMuVu}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TvbvbWsxdamuUZs.geometry}
          material={materials.XvdlxyjrKESiFay}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.vpUhSFYUYpnDUQE.geometry}
          material={materials.VlnkJNnmZmryUEK}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.VglCddniAjuXwWP.geometry}
          material={materials.IIOPDiBWBbrUopx}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.XdgYNqkrKoAIJsp.geometry}
          material={materials.qTzpZGPXrrlpDsm}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.SLEuRDFLKhfUOyE.geometry}
          material={materials.nLgTjJkjjIwxPzH}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.BILckvpwXOytcMs.geometry}
          material={materials.initialShadingGroup}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.MVWilhydUNwPxpT.geometry}
          material={materials.fhuhwvvbmZNTsNo}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.tYhdRFkjheTEnwh.geometry}
          material={materials.euLqrXMAOeSzxXG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.lWFljklIAvFvrBM_0.geometry}
          material={materials.toZkefdtnUhLKyP}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.mZCSizhtifxXBqG_0.geometry}
          material={materials.myxBndjHzHABgaf}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.pkonsGObqbDcbjn_0.geometry}
          material={materials.qTzpZGPXrrlpDsm}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.WUgXyTEbZmkapMh_0.geometry}
          material={materials.nfKhILGSzwibuSI}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.quvFSzOoArSvcXY.geometry}
          material={materials.HTVLbrDhlLdibKi}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.jiUeIJQcPqDOUIZ.geometry}
          material={materials.VlnkJNnmZmryUEK}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.rxiMoNrvziDIZct.geometry}
          material={materials.WeYJTXtSqeWejVb}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.LcaTrKQHGWZApgK.geometry}
          material={materials.WSDoIreTMPBuTxz}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.YyStFrQFolEKwWF.geometry}
          material={materials.yuFXHUhPQDoVApU}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.dsCQvEsFBIAHfbb.geometry}
          material={materials.VlnkJNnmZmryUEK}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.hImVmspNdsOatRs.geometry}
          material={materials.WSDoIreTMPBuTxz}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.SpKnavUGNMxGglY.geometry}
          material={materials.WeYJTXtSqeWejVb}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.OcdXOLSkbIPgJqo_0.geometry}
          material={materials.uApvtlLvHnjNKSG}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/iphone_14_pro_max_gold.glb')